#:kivy 1.8.0
#:import win kivy.core.window
#:import Color kivy.graphics.Color
#: import font pygame.font


<Node>:
	id: node
	pos: self.pos
	size: self.size
	image: image
	label: label
	source: ''
	keyword: ''

	Widget:		
		canvas:
			Color:
				rgb: 1, 1, 1
			Ellipse:
				size:self.height+10, self.width+10
				pos:self.x-5 , self.y-5

	AsyncImage:
		id: image
		source: node.source
		canvas:
			Ellipse:
				size: self.height+10, self.width+10
				pos: self.x-5, self.y-5
				texture: self.texture 

	Label:
		id: label
		pos: image.x, image.y+image.height - 30
		text: node.keyword
		font_size: root.height/5
		font_name: font.match_font('Droid Sans, Helvetica Light, Arial Thin, Arial')



		
<Edge>:

	pos: self.p.center_x, self.p.center_y
	size: self.c.center_x - self.p.center_x, self.c.center_y - self.p.center_y

	canvas:
		Color:
			rgb: .9, .9,.9

		Line:
			points: self.p.center_x, self.p.center_y , self.c.center_x, self.c.center_y
			width: 2



#uis
#uipup
#uibc


<Scatter_Summary_Widget>:
	id: ssw
	uic: uic.__self__
	summary: summ.__self__
	uibc: uibc.__self__
	border: 0

	#ui container, page = 0
	UIC: 
		id: uic
		uis: uis.__self__
		uibc: uibc.__self__


		StartupImage:
			id: startup_image
			size: (win.Window.width)/(uic.scale), win.Window.height/(uic.scale)
			center: (uic.width/2-uic.x)/uic.scale, (uic.height/2-uic.y)/uic.scale
			source: 'assets/bg.jpg'

		Widget:
			id: uis
			size: win.Window.width/2, win.Window.height/10
			pos: uic.center_x-uis.width/2.5, uic.center_y
			search_bar: search_text_field
			go_button: search_button

			MyTextInput:
				id: search_text_field
				pos: uis.pos
				size: (uis.width-uis.height-20), uis.height
				font_size: (uis.height)-30
				text: 'Search'
				multiline: False
				cursor_blink: False
				background_color: .1,.1,.1,1				
				foreground_color: 1,1,1,1
				cursor_color: 1,1,1,1				
				border: 0,0,0,0
				padding: 10
				font_name: font.match_font('Droid Sans, Helvetica Light, Arial Thin, Arial')
				
				on_touch_up:
					x = (search_text_field.text == 'Search')
					if x and search_text_field.collide_point(args[1].x, args[1].y): search_text_field.text = ''

				on_enter:
					blocked_and_collided = not uic.disabled
					if blocked_and_collided: uibc.disabled = False;\
					uibc.opacity = 1;\
					uic.initial_search()					

			Image:
				id: search_button
				pos: uis.x+(uis.width-uis.height)-10, uis.y
				size: (uis.height), uis.height
				source: 'assets/icon_search.png'

				on_touch_up:
					blocked_and_collided = ((uic.blocked == False) and (search_button.collide_point(args[1].x, args[1].y)))
					if blocked_and_collided: uibc.disabled = False;\
					uibc.opacity = 1;\
					uic.initial_search()
						


	#button container, page = 2
	BoxLayout:
		id: uibc
		uipup: uipup
		size: 100, 100
		spacing: str(5) + 'px'
		pos: (root.width - uibc.width) , (uic.height - uibc.height)
		new_search: new_search_button		

		Image:
			id: new_search_button
			source: 'assets/icon_search.png'
			size: uibc.width-5, uibc.height

			on_touch_down:				
				if uic.blocked == False and uibc.collide_point(args[1].x, args[1].y): uipup.disabled = False;\
				uipup.opacity = 1;\
				uic.do_translation = False;\
				uic.is_popup_displayed = True;\
				ssw.page = 2

			Popup:
				id: uipup
				content: uicc
				title: "Would you like to reset your search?"
				title_size: str(14)+'px'
				size: root.width/2, root.height/7
				separator_height: 0
				center: root.center

				Widget:
					id: uicc
					size: uipup.width, uipup.height/2
					yes_button: yes
					no_button: no 
					pos: uipup.pos

					Button:
						id: yes
						text: "YES"
						pos: uicc.pos
						size: uicc.width/2-(15/uic.scale), (uipup.height)/(4)
						font_size: (uipup.height)/10
						on_touch_up:
							collided = yes.collide_point(args[1].x, args[1].y)
							if collided: uibc.disabled = True;\
							uibc.opacity = 0;\
							uic.scale = 1.0;\
							uic.do_translation = False;\
							uic.do_scale = False;\
							uic.remove_widget(uis);\
							uic.controller.dump_nodes();\
							uipup.disabled = True;\
							uipup.opacity = 0;\
							ssw.page = 0;\
							uic.is_popup_displayed = False;\
							uic.clear_widgets();\
							uic.pos = (0,0);\
							uic.add_widget(uis);\
							uis.disabled = False;\														
							search_text_field.text = 'Search'					
	
					Button:
						id: no
						text: "NO"
						pos: uicc.x + uicc.width/2, uicc.y 
						size: uicc.width/2-(15/uic.scale), (uipup.height)/(4)
						font_size: (uipup.height)/(7)
						
						on_touch_up:						
							if no.collide_point(args[1].x, args[1].y): uipup.disabled = True;\
							uipup.opacity = 0;\
							uic.do_translation = True;\
							uic.is_popup_displayed = False;\
							ssw.page = 0


							
	#node summary scroll view, page =1					
	UISummary: 

		id: summ
		image: sum_pic
		text: ''
		source: ''
		label: summary
		image: sum_pic
		Widget:
			id: tsum
			size_hint: None, None
			height: 50*36+3*win.Window.size[1]/8
			width: root.width
			pos: summ.pos
			Widget:
				pos: tsum.pos
				canvas:
					Color:
						rgba: .1,.1,.1,.95
					Rectangle:
						pos: tsum.x - root.width/2, tsum.y - root.height/2
						size: 2*tsum.width ,2*tsum.height

			AsyncImage:
				id: sum_pic
				size: win.Window.size[0]/2, win.Window.size[1]/4
				center_x: tsum.x + tsum.width/2
				y: tsum.y + tsum.height- 1.5* self.height
				source: summ.source

			Label:
				id: summary
				text: summ.text
				markup: True
				center: tsum.center_x ,tsum.y+ (tsum.height-1.5*sum_pic.height-self.height)



