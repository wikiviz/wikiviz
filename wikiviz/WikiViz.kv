#:kivy 1.8.0
#:import r random
#: import win kivy.core.window
#:import Color kivy.graphics.Color
#:import atan2 math.atan2
#:import sin math.sin
#:import cos math.cos
#:import degrees math.degrees






<Node>:

	pos: self.pos
	size: self.size
	image: image
	label: label

	Widget:
		
		canvas:
			Color:
				rgb: r.random(), r.random(), r.random()
			Ellipse:
				size:self.height+30, self.width+30
				pos:self.x-15 , self.y-15
	AsyncImage:
		id: image
		canvas:
			Ellipse:
				size: self.height+20, self.width+20
				pos: self.x-10, self.y-10
				texture: self.texture 

	Label:
		id: label
		pos: self.pos
		text: ""
		font_size: root.height/2 
		
<Edge>:
	p: self._get_p()
	c: self._get_c()
	pos: self.p.center_x, self.p.center_y
	size: self.c.center_x - self.p.center_x, self.c.center_y - self.p.center_y

	#rotation: degrees(atan2((self.p.y-self.c.y), (self.p.x-self.c.x)))

	canvas:
		Color:
			rgb: r.random(), r.random(),r.random()

		Line:
			points: self.p.center_x, self.p.center_y , self.c.center_x, self.c.center_y
			width: 5

<Scatter_Summary_Widget>:
	id: ssw
	uic: uic.__self__
	summary: rst.__self__
	border: 0

	UIC:
		id: uic
		uis: uis.__self__


		uipup: uipup.__self__

		obj: []

#		on_transform_with_touch:
#			uic.remove_widget(uic.uibc)
#			uic.add_widget(uic.uibc)


		Widget:
			id: uis
			size: (5*uic.width)/6, uic.height/(7)
			pos: uic.center_x-uis.width/2, uic.center_y

			search_bar: search_text_field
			go_button: search_button


			TextInput:
				id: search_text_field
				pos: uis.pos
				size: (uis.width-uis.height), uis.height
				font_size: (uis.height)-20
				text: 'Search a Word'
				multiline: False
				cursor_blink: False

				on_touch_up:
					if search_text_field.collide_point(args[1].x, args[1].y): search_text_field.text = ''

			Image:
				id: search_button
				pos: uis.x+(uis.width-uis.height), uis.y
				size: (uis.height), uis.height
				source: 'mag.jpg'
				on_touch_up: 
					if search_button.collide_point(args[1].x, args[1].y): uic.display()
						


		Popup:
			id: uipup
			content: uicc
			title: "Would you like to reset your search?"
			title_size: str(14/uic.scale)+'px'
			size: root.width/(2*uic.scale), root.height/(7*uic.scale)
			separator_height: 0
			center: (uic.width/2 - uic.x)/uic.scale, (uic.height/2 - uic.y)/uic.scale



			Widget:
				id: uicc
				size: uipup.width, uipup.height/2
				yes_button: yes
				no_button: no 
				pos: uipup.pos
				Button:
					id: yes
					text: "YES"
					pos: uicc.pos
					size: uicc.width/2-(15/uic.scale), (uipup.height)/(4)
					font_size: (uipup.height)/(7)
					on_touch_up:
						if yes.collide_point(args[1].x, args[1].y):uic.new_search()
							
	
				Button:
					id: no
					text: "NO"
					pos: uicc.x + uicc.width/2, uicc.y 
					size: uicc.width/2-(15/uic.scale), (uipup.height)/(4)
					font_size: (uipup.height)/(7)
					on_touch_up:
						if no.collide_point(args[1].x, args[1].y): uic.decline_new_search()

	BoxLayout:
		id: uibc
		size: 100, 100
		spacing: str(5) + 'px'
		pos: (root.width - uibc.width) , (uic.height - uibc.height)
		new_search: new_search_button
		share: share_button
		Image:
			id: new_search_button
			source: 'mag.jpg'
			size: uibc.width-5, uibc.height

			on_touch_down:
				
				if uibc.collide_point(args[1].x, args[1].y): uic.confirm_new_search()
		Image:
			id: share_button
			source: 'share.jpg'		
			size: uibc.width-5, uibc.height		
							
							
	UISummary:

		id: rst
		text: ''

		Widget:
			id: tsum
			size: rst.size
			Widget:
				canvas:
					Color:
						rgba: .1,.1,.1,.95
					Rectangle:
						size: uic.width,uic.height
			AsyncImage:
				pos: tsum.x + root.width/2, tsum.y + 3*root.height/4
				source: "http://i1164.photobucket.com/albums/q572/marshill2/sun_zps0fa10dc5.jpg"
			Label:
				id: summary
				text: rst.text
				pos: tsum.x + root.width/2, tsum.y + root.height/2



<gr>:
	size: self.size
<sc>:


	image: image


	Widget:
		
		canvas:
			Color:
				rgb: r.random(), r.random(), r.random()
			Ellipse:
				size:self.height+30, self.width+30
				pos:self.x-15 , self.y-15
	AsyncImage:
		id: image
		canvas:
			Ellipse:
				size: self.height+20, self.width+20
				pos: self.x-10, self.y-10
				texture: self.texture 

