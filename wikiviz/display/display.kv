#:kivy 1.8.0
#:import r random
#: import win kivy.core.window
#:import Color kivy.graphics.Color






<Node>:

	pos: self.pos

	image: image
	label: label

	Widget:
		
		canvas:
			Color:
				rgb: r.random(), r.random(), r.random()
			Ellipse:
				size:self.height+30, self.width+30
				pos:self.x-15 , self.y-15
	AsyncImage:
		id: image
		canvas:
			Ellipse:
				size: self.height+20, self.width+20
				pos: self.x-10, self.y-10
				texture: self.texture 

	Label:
		id: label
		pos: self.pos
		text: ""
		font_size: root.height/2 
			

<test>:
	uic: uic.__self__
	summary: rst.__self__
	border: 0

	UIC:
		id: uic
		uis: uis.__self__
		uibc: uibc.__self__

		uipup: uipup.__self__



		on_transform_with_touch:
			uic.remove_widget(uic.uibc)
			uic.add_widget(uic.uibc)


		Widget:
			id: uis
			size: (5*uic.width)/12, uic.height/(14)
			pos: uic.center_x-uic.width/2, uic.center_y

			search_bar: search_text_field
			go_button: search_button

			UITextInput:
				id: search_text_field
				pos: uis.pos
				size: (uis.width-uis.height), uis.height
				font_size: (uis.height)-20
				text: 'Search a Word'
				multiline: False
				cursor_blink: False

			Image:
				id: search_button
				pos: uis.x+(uis.width-uis.height), uis.y
				size: (uis.height), uis.height

				source: 'mag.jpg'
				on_touch_down: x = uic.display() if (abs(args[1].x - search_button.center_x) <=search_button.width/2 and abs(args[1].y - search_button.center_y) <= search_button.height/2) else 1

		BoxLayout:
			id: uibc
			size: (uic.width/7)/uic.scale, (uic.width/14)/uic.scale
			spacing: str(5/uic.scale) + 'px'
			pos: (uic.width - uic.x)/uic.scale - (uibc.width) , (uic.height - uic.y)/uic.scale - (uibc.height)
			new_search: new_search_button
			share: share_button
			Image:
				id: new_search_button
				source: 'mag.jpg'
				size: uibc.width-5/uic.scale, uibc.height

				on_touch_down: x = uic.confirm_new_search() if (abs(args[1].x - new_search_button.center_x) <=new_search_button.width/2 and abs(args[1].y - new_search_button.center_y) <= new_search_button.height/2) else 1


			Image:
				id: share_button
				source: 'share.jpg'		
				size: uibc.width-5/uic.scale, uibc.height

		UIPopup:
			id: uipup
			content: uicc
			title: "Would you like to reset your search?"
			title_size: str(14/uic.scale)+'px'
			size: uic.width/(2*uic.scale), uic.height/(7*uic.scale)
			separator_height: 0
			auto_dismiss: False
			center: (uic.width/2 - uic.x)/uic.scale, (uic.height/2 - uic.y)/uic.scale


			Widget:
				id: uicc
				size: uipup.width, uipup.height/2
				yes_button: yes
				no_button: no 

				Button:
					id: yes
					text: "YES"
					pos: uicc.pos
					size: uicc.width/2-(15/uic.scale), (uipup.height)/(4)
					font_size: (uipup.height)/(7)
					on_touch_down: x = uic.new_search() if (abs(args[1].x - yes.center_x) <=yes.width/2 and abs(args[1].y - yes.center_y) <= yes.height/2) else False
	
				Button:
					id: no
					text: "NO"
					pos: uicc.x + uicc.width/2, uicc.y 
					size: uicc.width/2-(15/uic.scale), (uipup.height)/(4)
					font_size: (uipup.height)/(7)
					on_touch_down:  x = uic.remove_widget(uipup) if (abs(args[1].x - no.center_x) <=no.width/2 and abs(args[1].y - no.center_y) <= no.height/2) else False
	UISummary:

		id: rst
		text: ''

		Widget:
			id: tsum
			size: rst.size
			Widget:
				canvas:
					Color:
						rgba: .1,.1,.1,.95
					Rectangle:
						size: uic.width,uic.height
			AsyncImage:
				pos: tsum.x + root.width/2, tsum.y + 3*root.height/4
				source: "http://i1164.photobucket.com/albums/q572/marshill2/sun_zps0fa10dc5.jpg"
			Label:
				id: summary
				text: rst.text
				pos: tsum.x + root.width/2, tsum.y + root.height/2


<sc>:
	image: image
	AsyncImage:
		id: image


